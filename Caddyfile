# Caddy reverse proxy configuration
# Implements S2: TLS with Let's Encrypt, HSTS, streaming support

{$DOMAIN:localhost} {
    # TLS configuration (automatic with Let's Encrypt in production)
    # tls {$ACME_EMAIL:admin@example.com}

    # Security headers
    header {
        # HSTS (1 year max-age)
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
        
        # Security headers
        X-Content-Type-Options "nosniff"
        X-Frame-Options "DENY"
        X-XSS-Protection "1; mode=block"
        Referrer-Policy "strict-origin-when-cross-origin"
        
        # Remove server header
        -Server
    }

    # Health endpoint
    handle /health {
        respond "OK" 200
    }

    # MCP Server with SSE support
    handle /mcp* {
        reverse_proxy mcp-server:8081 {
            # Disable buffering for SSE
            flush_interval -1
            
            # Headers for SSE
            header_up Accept-Encoding identity
            header_down Cache-Control no-cache
            header_down X-Accel-Buffering no
        }
    }

    # OAuth endpoints (well-known, token, callback)
    handle /.well-known* {
        reverse_proxy mcp-server:8081 {
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-Proto {scheme}
        }
    }
    
    handle /oauth* {
        reverse_proxy mcp-server:8081 {
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-Proto {scheme}
        }
    }
    
    handle /auth* {
        reverse_proxy mcp-server:8081 {
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-Proto {scheme}
        }
    }

    # API endpoints
    handle /api* {
        reverse_proxy api:8082 {
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-Proto {scheme}
        }
    }

    # Default handler
    handle {
        respond "ADHD Budget Assistant" 200
    }

    # Logging
    log {
        output file /var/log/caddy/access.log
        format json
    }
}